计算机: CPU 内存 IO设备(磁盘 网卡)
linux:kernel内核 程序
内核 管理 内存分配 磁盘IO等等什么都管
里面有一个VFS的虚拟文件系统 一个目录树 树上的节点对应不同的物理位置(可以是不同的文件系统例如:fat exp2 exp3)
inode:每一个文件被VFS打开的时候都有一个虚拟的inode对应
文件加载是由内核去读 会被渡到pageCache里面
pageCache默认4K大小 内存里面的缓存 页缓存
如果有两个程序读取同一个文件，这个文件不是加载两次，内核加载一次后放进pageCache里加载过就不会加载 共享同一份
pageCache有就返回了
dirty:脏，当一个文件被VFS读取后会放入pageCache里面 如果修改了文件 这时pageCache就会标记dirty脏
是对内核打开所有文件的同一的管理 不是针对某一文件

程序和文件之间隔了一个内核，pageCache维护曾经读取过的文件，文件如果修改了的话 会被标记成脏

flash:脏就会有这个flash过程 什么时候flash?程序等着内核去刷(容易丢数据)，程序调用内核刷(准确比较)
FD:文件描述符 交给程序使用的 记录操作文件的位置
