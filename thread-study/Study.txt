1 什么是进程
   进程是操作系统进行资源分配的基本单位。例如：你打开一个程序QQ 操作系统会先找到它的可执行文件 然后加载到内存中
   当程序进程要被执行时，被放进CPU中
2 什么是线程
  线程是程序执行的路径。如果你没有不同的执行路径 单线程
  多线程 一个程序进程产生不同的分支，分支在同时执行
  程序(进程)是以线程为单位开始执行的，当程序开始执行时，会先找到主线程(main方法)

  进程是资源分配的基本单位，线程是进行的调度执行的基本单位。多个线程共享进程的资源


  程序有指令 有数据
  CPU 包含 寄存器组存储数据register  计算单元ALU   PC寄存器用来存储执行哪条指令了
  OS操作系统 负责调度线程的执行
  当CPU执行某一进程时，如果要切换执行另一个进程 会把当前进程放入cache缓存中(进程的内存地址 执行到哪了)
  然后去执行另一进程  这就是进程之间的来回切换 OS负责调度 调度算法 CPU只管执行(不区分是哪个进程的)
  由OS进行调度

  一个CPU同一时间只能跑一个线程 问 单个CPU设置多线程是否有意义？ 进程并不是一直消耗CPU(等待输入指令 sleep)

  线程CPU密集型 大量计算 IO密集型 输入输出读写

  工作线程是否是越多越好 ？ 线程切换也消耗资源
  多少个最合适？ 方式一：核数 CPU个数 每一个核上都可以跑一个线程。当然机器上也有其他的线程要执行(其他程序 GC)
  所以核数也不一定是最优 不是占满是最合适的 要留一定空间处理紧急事情
  有一个公式 线程数量 = 核数*期望CPU利用率*(1+等待时间/计算时间)  CPU期望利用率0-1之间
  等待时间/计算时间 怎么知道等待时间和计算时间 只能部署之后 统计才能得到
  需要用到工具profiler计算